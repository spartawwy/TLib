// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TLib/core/tsystem_time.proto

#ifndef PROTOBUF_TLib_2fcore_2ftsystem_5ftime_2eproto__INCLUDED
#define PROTOBUF_TLib_2fcore_2ftsystem_5ftime_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_TLib_2fcore_2ftsystem_5ftime_2eproto();
void protobuf_AssignDesc_TLib_2fcore_2ftsystem_5ftime_2eproto();
void protobuf_ShutdownFile_TLib_2fcore_2ftsystem_5ftime_2eproto();

class Time;

// ===================================================================

class Time : public ::google::protobuf::MessageLite {
 public:
  Time();
  virtual ~Time();

  Time(const Time& from);

  inline Time& operator=(const Time& from) {
    CopyFrom(from);
    return *this;
  }

  static const Time& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const Time* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(Time* other);

  // implements Message ----------------------------------------------

  Time* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Time& from);
  void MergeFrom(const Time& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 time_value = 1 [default = 0];
  inline bool has_time_value() const;
  inline void clear_time_value();
  static const int kTimeValueFieldNumber = 1;
  inline ::google::protobuf::int64 time_value() const;
  inline void set_time_value(::google::protobuf::int64 value);

  // optional double frac_sec = 2 [default = 0];
  inline bool has_frac_sec() const;
  inline void clear_frac_sec();
  static const int kFracSecFieldNumber = 2;
  inline double frac_sec() const;
  inline void set_frac_sec(double value);

  // @@protoc_insertion_point(class_scope:Time)
 private:
  inline void set_has_time_value();
  inline void clear_has_time_value();
  inline void set_has_frac_sec();
  inline void clear_has_frac_sec();

  ::google::protobuf::int64 time_value_;
  double frac_sec_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_TLib_2fcore_2ftsystem_5ftime_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_TLib_2fcore_2ftsystem_5ftime_2eproto();
  #endif
  friend void protobuf_AssignDesc_TLib_2fcore_2ftsystem_5ftime_2eproto();
  friend void protobuf_ShutdownFile_TLib_2fcore_2ftsystem_5ftime_2eproto();

  void InitAsDefaultInstance();
  static Time* default_instance_;
};
// ===================================================================


// ===================================================================

// Time

// optional int64 time_value = 1 [default = 0];
inline bool Time::has_time_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Time::set_has_time_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Time::clear_has_time_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Time::clear_time_value() {
  time_value_ = GOOGLE_LONGLONG(0);
  clear_has_time_value();
}
inline ::google::protobuf::int64 Time::time_value() const {
  return time_value_;
}
inline void Time::set_time_value(::google::protobuf::int64 value) {
  set_has_time_value();
  time_value_ = value;
}

// optional double frac_sec = 2 [default = 0];
inline bool Time::has_frac_sec() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Time::set_has_frac_sec() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Time::clear_has_frac_sec() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Time::clear_frac_sec() {
  frac_sec_ = 0;
  clear_has_frac_sec();
}
inline double Time::frac_sec() const {
  return frac_sec_;
}
inline void Time::set_frac_sec(double value) {
  set_has_frac_sec();
  frac_sec_ = value;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_TLib_2fcore_2ftsystem_5ftime_2eproto__INCLUDED
