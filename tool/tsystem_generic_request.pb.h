// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TLib/tool/tsystem_generic_request.proto

#ifndef PROTOBUF_TLib_2ftool_2ftsystem_5fgeneric_5frequest_2eproto__INCLUDED
#define PROTOBUF_TLib_2ftool_2ftsystem_5fgeneric_5frequest_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "TLib/core/tsystem_return_code.pb.h"
#include "TLib/tool/tsystem_generic_param.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_TLib_2ftool_2ftsystem_5fgeneric_5frequest_2eproto();
void protobuf_AssignDesc_TLib_2ftool_2ftsystem_5fgeneric_5frequest_2eproto();
void protobuf_ShutdownFile_TLib_2ftool_2ftsystem_5fgeneric_5frequest_2eproto();

class GenericRequest;

// ===================================================================

class GenericRequest : public ::google::protobuf::MessageLite {
 public:
  GenericRequest();
  virtual ~GenericRequest();

  GenericRequest(const GenericRequest& from);

  inline GenericRequest& operator=(const GenericRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const GenericRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GenericRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GenericRequest* other);

  // implements Message ----------------------------------------------

  GenericRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GenericRequest& from);
  void MergeFrom(const GenericRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 request_id = 1 [default = 0];
  inline bool has_request_id() const;
  inline void clear_request_id();
  static const int kRequestIdFieldNumber = 1;
  inline ::google::protobuf::uint32 request_id() const;
  inline void set_request_id(::google::protobuf::uint32 value);

  // optional bool ack = 2 [default = true];
  inline bool has_ack() const;
  inline void clear_ack();
  static const int kAckFieldNumber = 2;
  inline bool ack() const;
  inline void set_ack(bool value);

  // required string req_name = 3;
  inline bool has_req_name() const;
  inline void clear_req_name();
  static const int kReqNameFieldNumber = 3;
  inline const ::std::string& req_name() const;
  inline void set_req_name(const ::std::string& value);
  inline void set_req_name(const char* value);
  inline void set_req_name(const char* value, size_t size);
  inline ::std::string* mutable_req_name();
  inline ::std::string* release_req_name();
  inline void set_allocated_req_name(::std::string* req_name);

  // repeated string req_args = 4;
  inline int req_args_size() const;
  inline void clear_req_args();
  static const int kReqArgsFieldNumber = 4;
  inline const ::std::string& req_args(int index) const;
  inline ::std::string* mutable_req_args(int index);
  inline void set_req_args(int index, const ::std::string& value);
  inline void set_req_args(int index, const char* value);
  inline void set_req_args(int index, const char* value, size_t size);
  inline ::std::string* add_req_args();
  inline void add_req_args(const ::std::string& value);
  inline void add_req_args(const char* value);
  inline void add_req_args(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& req_args() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_req_args();

  // @@protoc_insertion_point(class_scope:GenericRequest)
 private:
  inline void set_has_request_id();
  inline void clear_has_request_id();
  inline void set_has_ack();
  inline void clear_has_ack();
  inline void set_has_req_name();
  inline void clear_has_req_name();

  ::google::protobuf::uint32 request_id_;
  bool ack_;
  ::std::string* req_name_;
  ::google::protobuf::RepeatedPtrField< ::std::string> req_args_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_TLib_2ftool_2ftsystem_5fgeneric_5frequest_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_TLib_2ftool_2ftsystem_5fgeneric_5frequest_2eproto();
  #endif
  friend void protobuf_AssignDesc_TLib_2ftool_2ftsystem_5fgeneric_5frequest_2eproto();
  friend void protobuf_ShutdownFile_TLib_2ftool_2ftsystem_5fgeneric_5frequest_2eproto();

  void InitAsDefaultInstance();
  static GenericRequest* default_instance_;
};
// ===================================================================


// ===================================================================

// GenericRequest

// optional uint32 request_id = 1 [default = 0];
inline bool GenericRequest::has_request_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GenericRequest::set_has_request_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GenericRequest::clear_has_request_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GenericRequest::clear_request_id() {
  request_id_ = 0u;
  clear_has_request_id();
}
inline ::google::protobuf::uint32 GenericRequest::request_id() const {
  return request_id_;
}
inline void GenericRequest::set_request_id(::google::protobuf::uint32 value) {
  set_has_request_id();
  request_id_ = value;
}

// optional bool ack = 2 [default = true];
inline bool GenericRequest::has_ack() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GenericRequest::set_has_ack() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GenericRequest::clear_has_ack() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GenericRequest::clear_ack() {
  ack_ = true;
  clear_has_ack();
}
inline bool GenericRequest::ack() const {
  return ack_;
}
inline void GenericRequest::set_ack(bool value) {
  set_has_ack();
  ack_ = value;
}

// required string req_name = 3;
inline bool GenericRequest::has_req_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GenericRequest::set_has_req_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GenericRequest::clear_has_req_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GenericRequest::clear_req_name() {
  if (req_name_ != &::google::protobuf::internal::kEmptyString) {
    req_name_->clear();
  }
  clear_has_req_name();
}
inline const ::std::string& GenericRequest::req_name() const {
  return *req_name_;
}
inline void GenericRequest::set_req_name(const ::std::string& value) {
  set_has_req_name();
  if (req_name_ == &::google::protobuf::internal::kEmptyString) {
    req_name_ = new ::std::string;
  }
  req_name_->assign(value);
}
inline void GenericRequest::set_req_name(const char* value) {
  set_has_req_name();
  if (req_name_ == &::google::protobuf::internal::kEmptyString) {
    req_name_ = new ::std::string;
  }
  req_name_->assign(value);
}
inline void GenericRequest::set_req_name(const char* value, size_t size) {
  set_has_req_name();
  if (req_name_ == &::google::protobuf::internal::kEmptyString) {
    req_name_ = new ::std::string;
  }
  req_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GenericRequest::mutable_req_name() {
  set_has_req_name();
  if (req_name_ == &::google::protobuf::internal::kEmptyString) {
    req_name_ = new ::std::string;
  }
  return req_name_;
}
inline ::std::string* GenericRequest::release_req_name() {
  clear_has_req_name();
  if (req_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = req_name_;
    req_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GenericRequest::set_allocated_req_name(::std::string* req_name) {
  if (req_name_ != &::google::protobuf::internal::kEmptyString) {
    delete req_name_;
  }
  if (req_name) {
    set_has_req_name();
    req_name_ = req_name;
  } else {
    clear_has_req_name();
    req_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated string req_args = 4;
inline int GenericRequest::req_args_size() const {
  return req_args_.size();
}
inline void GenericRequest::clear_req_args() {
  req_args_.Clear();
}
inline const ::std::string& GenericRequest::req_args(int index) const {
  return req_args_.Get(index);
}
inline ::std::string* GenericRequest::mutable_req_args(int index) {
  return req_args_.Mutable(index);
}
inline void GenericRequest::set_req_args(int index, const ::std::string& value) {
  req_args_.Mutable(index)->assign(value);
}
inline void GenericRequest::set_req_args(int index, const char* value) {
  req_args_.Mutable(index)->assign(value);
}
inline void GenericRequest::set_req_args(int index, const char* value, size_t size) {
  req_args_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GenericRequest::add_req_args() {
  return req_args_.Add();
}
inline void GenericRequest::add_req_args(const ::std::string& value) {
  req_args_.Add()->assign(value);
}
inline void GenericRequest::add_req_args(const char* value) {
  req_args_.Add()->assign(value);
}
inline void GenericRequest::add_req_args(const char* value, size_t size) {
  req_args_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GenericRequest::req_args() const {
  return req_args_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GenericRequest::mutable_req_args() {
  return &req_args_;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_TLib_2ftool_2ftsystem_5fgeneric_5frequest_2eproto__INCLUDED
