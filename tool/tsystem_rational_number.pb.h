// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TLib/tool/tsystem_rational_number.proto

#ifndef PROTOBUF_TLib_2ftool_2ftsystem_5frational_5fnumber_2eproto__INCLUDED
#define PROTOBUF_TLib_2ftool_2ftsystem_5frational_5fnumber_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_TLib_2ftool_2ftsystem_5frational_5fnumber_2eproto();
void protobuf_AssignDesc_TLib_2ftool_2ftsystem_5frational_5fnumber_2eproto();
void protobuf_ShutdownFile_TLib_2ftool_2ftsystem_5frational_5fnumber_2eproto();

class RationalNumber;

// ===================================================================

class RationalNumber : public ::google::protobuf::MessageLite {
 public:
  RationalNumber();
  virtual ~RationalNumber();

  RationalNumber(const RationalNumber& from);

  inline RationalNumber& operator=(const RationalNumber& from) {
    CopyFrom(from);
    return *this;
  }

  static const RationalNumber& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const RationalNumber* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(RationalNumber* other);

  // implements Message ----------------------------------------------

  RationalNumber* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const RationalNumber& from);
  void MergeFrom(const RationalNumber& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 r = 1 [default = 0];
  inline bool has_r() const;
  inline void clear_r();
  static const int kRFieldNumber = 1;
  inline ::google::protobuf::int32 r() const;
  inline void set_r(::google::protobuf::int32 value);

  // required int32 n = 2;
  inline bool has_n() const;
  inline void clear_n();
  static const int kNFieldNumber = 2;
  inline ::google::protobuf::int32 n() const;
  inline void set_n(::google::protobuf::int32 value);

  // required int32 d = 3;
  inline bool has_d() const;
  inline void clear_d();
  static const int kDFieldNumber = 3;
  inline ::google::protobuf::int32 d() const;
  inline void set_d(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RationalNumber)
 private:
  inline void set_has_r();
  inline void clear_has_r();
  inline void set_has_n();
  inline void clear_has_n();
  inline void set_has_d();
  inline void clear_has_d();

  ::google::protobuf::int32 r_;
  ::google::protobuf::int32 n_;
  ::google::protobuf::int32 d_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_TLib_2ftool_2ftsystem_5frational_5fnumber_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_TLib_2ftool_2ftsystem_5frational_5fnumber_2eproto();
  #endif
  friend void protobuf_AssignDesc_TLib_2ftool_2ftsystem_5frational_5fnumber_2eproto();
  friend void protobuf_ShutdownFile_TLib_2ftool_2ftsystem_5frational_5fnumber_2eproto();

  void InitAsDefaultInstance();
  static RationalNumber* default_instance_;
};
// ===================================================================


// ===================================================================

// RationalNumber

// optional int32 r = 1 [default = 0];
inline bool RationalNumber::has_r() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RationalNumber::set_has_r() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RationalNumber::clear_has_r() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RationalNumber::clear_r() {
  r_ = 0;
  clear_has_r();
}
inline ::google::protobuf::int32 RationalNumber::r() const {
  return r_;
}
inline void RationalNumber::set_r(::google::protobuf::int32 value) {
  set_has_r();
  r_ = value;
}

// required int32 n = 2;
inline bool RationalNumber::has_n() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RationalNumber::set_has_n() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RationalNumber::clear_has_n() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RationalNumber::clear_n() {
  n_ = 0;
  clear_has_n();
}
inline ::google::protobuf::int32 RationalNumber::n() const {
  return n_;
}
inline void RationalNumber::set_n(::google::protobuf::int32 value) {
  set_has_n();
  n_ = value;
}

// required int32 d = 3;
inline bool RationalNumber::has_d() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RationalNumber::set_has_d() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RationalNumber::clear_has_d() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RationalNumber::clear_d() {
  d_ = 0;
  clear_has_d();
}
inline ::google::protobuf::int32 RationalNumber::d() const {
  return d_;
}
inline void RationalNumber::set_d(::google::protobuf::int32 value) {
  set_has_d();
  d_ = value;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_TLib_2ftool_2ftsystem_5frational_5fnumber_2eproto__INCLUDED
